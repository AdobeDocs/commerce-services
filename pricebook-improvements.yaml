# Price Books API Documentation Improvements
# This file contains suggested improvements to the Price Books API documentation
# that can be applied to the main OpenAPI specification later.

# 1. Enhanced Price Books Tag Description
# Replace the existing Price Books tag description with:

price_books_tag_description: |
  Define pricing scopes to manage product prices across different customer tiers and markets. Price books support a hierarchical model, allowing up to three levels of nested child price books under each base price book.

  <strong>Hierarchical Structure</strong>

  Price books follow a tree structure with two types:
  * **Base Price Books** - Root-level price books that define currency and serve as parents
  * **Child Price Books** - Nested price books that inherit currency from their parent

  <strong>Hierarchy Rules</strong>

  * **Maximum Depth**: Up to 3 levels of nesting (base → child → grandchild → great-grandchild)
  * **Currency Inheritance**: Child price books inherit currency from their parent and cannot override it
  * **Parent Assignment**: Base price books cannot have parents; only child price books can reference a parent
  * **Unique IDs**: Each price book must have a unique `priceBookId` across the entire hierarchy

  <strong>Use Cases</strong>

  * **Geographic Pricing**: Base price book for a country, child price books for regions/states
  * **Customer Segments**: Base price book for standard pricing, child price books for VIP, wholesale, etc.
  * **Channel Pricing**: Base price book for retail, child price books for online, mobile, etc.
  * **Temporal Pricing**: Base price book for regular pricing, child price books for seasonal promotions

  <strong>Price Lookup Behavior</strong>

  When a product price is requested, the system searches the hierarchy starting from the specified price book and traverses upward through parent price books until it finds a price or reaches the root level.

# 2. Improved Create Price Books Operation Description
# Replace the existing create price books description with:

create_price_books_description: |
  Create or replace existing price books with support for hierarchical pricing structures.

  <h3>Creating Base Price Books</h3>

  Base price books are the foundation of your pricing hierarchy:
  * **Required Fields**: `priceBookId`, `name`, `currency`
  * **Currency Definition**: Sets the currency for the entire branch of child price books
  * **No Parent**: Base price books cannot reference a parent price book
  * **Unique ID**: Must have a unique `priceBookId` across all price books

  <h3>Creating Child Price Books</h3>

  Child price books inherit from their parent and can extend the hierarchy:
  * **Required Fields**: `priceBookId`, `name`, `parentId`
  * **Parent Reference**: Must reference an existing parent price book
  * **Currency Inheritance**: Automatically inherits currency from parent
  * **Hierarchy Depth**: Can create up to 3 levels of nesting

  <h3>Hierarchy Management</h3>

  * **Parent Assignment**: Once a `parentId` is assigned, it cannot be changed via update operations
  * **Restructuring**: To change parent-child relationships, delete and recreate the child price book
  * **Validation**: The system validates parent references and hierarchy depth limits

  Use the [update price books operation](#operation/updatePriceBooks) to modify existing price book names or base price book currencies.

# 3. Enhanced Create Price Books Example
# Replace the existing example with:

create_price_books_example:
  summary: Create a hierarchical price book structure
  description: |
    Create a comprehensive pricing hierarchy with a base price book and multiple child price books.
    This example demonstrates geographic pricing with regional variations.
  value:
    [
      {
        "priceBookId": "us",
        "name": "US Base Price Book",
        "currency": "USD"
      },
      {
        "priceBookId": "us-north",
        "parentId": "us",
        "name": "US North Region"
      },
      {
        "priceBookId": "us-south",
        "parentId": "us",
        "name": "US South Region"
      },
      {
        "priceBookId": "us-north-east",
        "parentId": "us-north",
        "name": "US Northeast Territory"
      },
      {
        "priceBookId": "us-north-west",
        "parentId": "us-north",
        "name": "US Northwest Territory"
      }
    ]

# 4. Improved Update Price Books Operation Description
# Replace the existing update price books description with:

update_price_books_description: |
  Update existing price books with limitations on hierarchical changes.

  <h3>Updateable Fields</h3>

  * **Name**: Can be updated for both base and child price books
  * **Currency**: Can only be updated for base price books (affects entire hierarchy)
  * **Parent ID**: Cannot be updated - use delete and recreate to change hierarchy

  <h3>Update Restrictions</h3>

  * **Parent Assignment**: Cannot change `parentId` via update operations
  * **Hierarchy Changes**: To restructure the hierarchy, delete and recreate child price books
  * **Currency Inheritance**: Child price books automatically inherit currency changes from parent
  * **Validation**: System validates that `parentId` references exist and hierarchy depth is maintained

  <h3>Update Strategies</h3>

  * **Base Price Books**: Update name and currency as needed
  * **Child Price Books**: Include correct `parentId` in request (will be ignored if different)
  * **Hierarchy Restructuring**: Delete child price book and recreate with new parent reference

# 5. Enhanced Delete Price Books Operation Description
# Replace the existing delete price books description with:

delete_price_books_description: |
  Delete price books and their associated pricing data with cascading effects on the hierarchy.

  <h3>Cascading Deletion</h3>

  When you delete a price book:
  * **Child Price Books**: All child price books in the hierarchy are automatically deleted
  * **Associated Prices**: All prices assigned to the deleted price book and its children are removed
  * **Hierarchy Impact**: The entire branch below the deleted price book is removed

  <h3>Deletion Scenarios</h3>

  * **Base Price Book**: Deletes entire pricing hierarchy and all associated prices
  * **Child Price Book**: Deletes the specific price book and its children, but preserves sibling price books
  * **Leaf Price Book**: Deletes only the specified price book and its associated prices

  <h3>Recovery Options</h3>

  If a price book is deleted by mistake:
  * **Time Window**: You have up to one week to restore deleted price books
  * **Restoration Method**: Recreate the top-level parent price book using the original create payload
  * **State Recovery**: Price books and prices are restored to their state when deleted
  * **Hierarchy Reconstruction**: The entire hierarchy is rebuilt from the restoration payload

  <h3>Best Practices</h3>

  * **Backup Strategy**: Keep copies of price book configurations for recovery
  * **Validation**: Verify hierarchy structure before deletion
  * **Impact Assessment**: Review associated prices before deleting price books

# 6. Additional Complex Hierarchy Example
# Add this new example to the update price books operation:

complex_hierarchy_example:
  summary: Create a complex multi-level pricing hierarchy
  description: |
    Create a comprehensive pricing structure for a global business with multiple regions,
    customer segments, and sales channels. This demonstrates the full potential of
    hierarchical price books.
  value:
    [
      {
        "priceBookId": "global",
        "name": "Global Base Pricing",
        "currency": "USD"
      },
      {
        "priceBookId": "us-retail",
        "parentId": "global",
        "name": "US Retail Channel"
      },
      {
        "priceBookId": "us-online",
        "parentId": "global",
        "name": "US Online Channel"
      },
      {
        "priceBookId": "us-retail-premium",
        "parentId": "us-retail",
        "name": "US Retail Premium Customers"
      },
      {
        "priceBookId": "us-retail-standard",
        "parentId": "us-retail",
        "name": "US Retail Standard Customers"
      },
      {
        "priceBookId": "us-online-vip",
        "parentId": "us-online",
        "name": "US Online VIP Members"
      },
      {
        "priceBookId": "us-online-regular",
        "parentId": "us-online",
        "name": "US Online Regular Customers"
      }
    ]

# 7. Improved Schema Descriptions
# Replace the existing schema descriptions with:

feed_pricebook_description: |
  Price book information supporting hierarchical pricing structures.
  Use base price books to define currency and create child price books for specific pricing scenarios.

price_book_base_description: |
  Root-level price book that defines currency and serves as a parent for child price books.
  Base price books cannot have parents and establish the foundation for pricing hierarchies.

price_book_base_properties:
  priceBookId:
    description: |
      Unique identifier for the base price book. Must be unique across all price books.
      Used to reference this price book in child price books and pricing data.
    example: "us-base"
  name:
    description: |
      Human-readable name for the price book. Used for display and identification purposes.
    example: "US Base Pricing"
  currency:
    description: |
      Currency code that applies to this price book and all its child price books.
      Child price books inherit this currency and cannot override it.
    example: "USD"

price_book_child_description: |
  Nested price book that inherits currency from its parent and can extend the pricing hierarchy.
  Child price books can have up to 3 levels of nesting from the base price book.

price_book_child_properties:
  priceBookId:
    description: |
      Unique identifier for the child price book. Must be unique across all price books.
      Used to reference this price book in pricing data and potential child price books.
    example: "us-retail"
  name:
    description: |
      Human-readable name for the child price book. Used for display and identification purposes.
    example: "US Retail Channel"
  parentId:
    description: |
      Reference to the parent price book ID. Must reference an existing price book.
      Determines the currency inheritance and hierarchy level.
    example: "us-base"

# Application Instructions:
# 1. Replace the Price Books tag description (around line 35-45)
# 2. Update the create price books operation description (around line 1125-1145)
# 3. Replace the create price books example (around line 1150-1170)
# 4. Update the update price books operation description (around line 1190-1210)
# 5. Add the complex hierarchy example to the update operation examples
# 6. Update the delete price books operation description (around line 1295-1315)
# 7. Update the schema descriptions in the components section (around line 2120-2180)

# Note: All suggested improvements have been reverted from the main OpenAPI file
# and are now preserved in this file for future application. 